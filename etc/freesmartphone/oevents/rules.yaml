
# This file is in YAML format (http://www.yaml.org/) 
# We define a list of rules that will be automatically loaded
# When we start the oevents module of the framework daemon
#
# The attributes of a rule are :
# - trigger     : trigger object
# - filters     : filters object or list of filters objects
# - actions     : action object or list of actions objects
#
# We define the following functions :
# - CallStatus()            : create a trigger object activated on a call status event 
# - PowerStatus()           : create a trigger object activated on a power status event
# - HasAttr(name, value)    : create a filter that accept signal with a given attribute
# - Not(filter)             : create a neg filter
# - PlaySound(file)         : Action that starts to play an audio file
# - StopSound(file)         : Action that stop an audio file
# - SetScenario(name)       : Action that sets an audio scenario
# - StartVibration
# - StopVibration
# - RingTone(cmd)           : cmd can be 'start' or 'stop'
# - Time(hour, min)         : create a trigger activated at the given time
# - Debug(msg)              : Action that prints a debug message (only for debuging)

-
    trigger: IncomingMessage()
    actions: MessageTone(play)
-
    trigger: CallStatus()
    filters: HasAttr(status, "incoming")
    actions: RingTone(play)
-
    trigger: CallStatus()
    filters: Not(HasAttr(status, "incoming"))
    actions: RingTone(stop)
-
    trigger: Time(12,29)
    actions: Debug("A Test")
-
    trigger: CallStatus()
    filters: HasAttr(status, "active")
    actions: SetScenario(gsmhandset)
-
    trigger: CallStatus()
    filters: HasAttr(status, "release")
    actions: SetScenario(stereoout)
-
    trigger: PowerStatus()
    filters: HasAttr(status, "Charging")
    actions: 
            - SetLed("gta02_power_blue", "dark")
            - SetLed("gta02_power_orange", "light")
-
    trigger: PowerStatus()
    filters: HasAttr(status, "Discharging")
    actions:
            - SetLed("gta02_power_blue", "dark")
            - SetLed("gta02_power_orange", "dark")
-
    trigger: PowerStatus()
    filters: HasAttr(status, "Full")
    actions: 
             - SetLed("gta02_power_blue", "light")
             - SetLed("gta02_power_orange", "dark")
-
    trigger: PowerStatus()
    filters: HasAttr(status, "Critical")
    actions:
             - SetLed("gta02_power_blue","dark")
             - SetLed("gta02_power_orange","blink")
-
    trigger: InputEvent()
    filters: 
             - HasAttr(switch, "HEADSET")
             - HasAttr(event, "pressed")
    actions: Command('amixer -d sset "Amp Spk" mute')
-
    trigger: InputEvent()
    filters:
             - HasAttr(switch, "HEADSET")
             - HasAttr(event, "released")
    actions: Command('amixer -d sset "Amp Spk" unmute')
