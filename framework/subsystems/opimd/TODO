* Disable "no-buffering" mode and start using "commit" when a write is wanted instead of all the time. Might fix the corruptions.
* Fix FIXMEs
* Add a BLOB type
* Fix bug that Adding a new missed call doesn't check if it's really New, or just an already read one added later.
* Remove the EntryUpdated and UpdatedEntry signals, that is, keep only one. (Not sure it's needed, must check)
* Make more distinct differenation between data and validation. ATM they are mixed (faster), but this shouldn't be that much of an overhead anyway, since there are only a small number of "items" in a query.
* Clean up all the old relics
* Support "connecting" backends maybe using @DOMAIN, i.e @Contacts will be a field containing a dictionary with (list containing dicotinaries when needed?) the matching contact should find a way to say how to match? Or maybe @DOMAIN_field = true? and compare is by using @DOMAIN = compare_field. Probably best would be @DOMAIN = {} (i.e a dict with stuff)
* When connecting domains should support restriction based on the connected domain.
* Add calculated fields, either make it possible to request type and have a default "generator" for it, or make more complex stuff. - Only on query, can't compare.
* Add more logical conditioning like putting a list of conditions a field called %or will mean they are connected with or, same with %and.
* Should prefixing a field with ! mean not?
* Discuss breaking API? for instance Peer instead of Sender/Recipient etc
* Make queries save ids, not full entries
* Fix missing check_single_entry
* FSO handlers, add a timer to check again if the framework is even loaded (when opimd starts before the framework)
* Clean internal use of path, move completely to Id internally
* Add auto reload of configs
* When updating Queries, we should do something fancier, since if the query is a "connected" query, we should do a lot to make sure everything works.
* Add GetComplexContent for do complex connections (i.e number resolving) for a single contact.
* Add signals about fields addition/deletion.

-- Tasks
* <dos1> and Tasks is Contacts + UnfinishedTasks support :P
