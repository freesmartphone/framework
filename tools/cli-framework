#!/usr/bin/env python
# -*- coding: UTF-8 -*-
"""
Interactive console for the freesmartphone.org framework

(C) 2008 Michael 'Mickey' Lauer <mlauer@vanille-media.de>
(C) 2008 Jan 'Shoragan' LÃ¼bbe <jluebbe@lasnet.de>
(C) 2008 Openmoko, Inc.

GPLv2 or later
"""

import os, sys
import dbus.service
import dbus.mainloop.glib
import dbus
from syslog import syslog, LOG_ERR, LOG_WARNING, LOG_INFO, LOG_DEBUG
import dbus, sys, thread, atexit
from gobject import threads_init, MainLoop

def handler( *args, **kwargs ):
    print "="*78
    print "got a signal from '%s' (via %s):" % ( kwargs["path"], kwargs["sender"] )
    print "=> SIGNAL: %s.%s (" % ( kwargs["interface"], kwargs["member"] ),
    for arg in args[:-1]:
        print "%s, " % arg,
    print "%s )" % args[-1]
    print "="*78

def getObject( bus, busname, objectpath ):
    return bus.get_object( busname, objectpath, follow_name_owner_changes=True )

def getInterface( bus, busname, objectpath, interface ):
    proxy = getObject( bus, busname, objectpath )
    return dbus.Interface( proxy, interface)

dbus.mainloop.glib.DBusGMainLoop( set_as_default=True )
mainloop = MainLoop()

bus = dbus.SystemBus()

# FIXME use introspection

gsm = getObject( bus, "org.freesmartphone.ogsmd", "/org/freesmartphone/GSM/Device" )

# ophoned
gsmserver = getInterface( bus,
    "org.freesmartphone.ogsmd",
    "/org/freesmartphone/GSM/Server",
    "org.freesmartphone.GSM.Server" )

# device
gsmdevice = getInterface( bus,
    "org.freesmartphone.ogsmd",
    "/org/freesmartphone/GSM/Device",
    "org.freesmartphone.GSM.Device" )
gsmsim = getInterface( bus,
    "org.freesmartphone.ogsmd",
    "/org/freesmartphone/GSM/Device",
    "org.freesmartphone.GSM.SIM" )
gsmnetwork = getInterface( bus,
    "org.freesmartphone.ogsmd",
    "/org/freesmartphone/GSM/Device",
    "org.freesmartphone.GSM.Network" )
gsmcall = getInterface( bus,
    "org.freesmartphone.ogsmd",
    "/org/freesmartphone/GSM/Device",
    "org.freesmartphone.GSM.Call" )
gsmpdp = getInterface( bus,
    "org.freesmartphone.ogsmd",
    "/org/freesmartphone/GSM/Device",
    "org.freesmartphone.GSM.PDP" )
gsmtest = getInterface( bus,
    "org.freesmartphone.ogsmd",
    "/org/freesmartphone/GSM/Device",
    "org.freesmartphone.GSM.Test" )

bus.add_signal_receiver( handler, None, None, "org.freesmartphone.frameworkd", None,
    sender_keyword = "sender",
    destination_keyword = "destination",
    interface_keyword = "interface",
    member_keyword = "member",
    path_keyword = "path" )

import rlcompleter, readline, atexit
readline.parse_and_bind( "tab: complete" )
try:
    readline.read_history_file( os.path.expanduser( "~/.framework-history" ) )
except IOError:
    pass
atexit.register( readline.write_history_file, os.path.expanduser( "~/.framework-history" ) )

#threads_init()
#thread.start_new_thread( mainloop.run, () )

import code
console = code.InteractiveConsole( locals() )
console.interact( "freesmartphone.org interactive command line" )

