#!/usr/bin/env python
"""
The Open Device Daemon - Python Implementation

(C) 2008 Michael 'Mickey' Lauer <mlauer@vanille-media.de>
(C) 2008 Openmoko, Inc.
GPLv2 or later
"""

from optparse import OptionParser
from config import LOG, LOG_ERR, LOG_WARNING, LOG_INFO, LOG_DEBUG
from syslog import openlog, LOG_PERROR, LOG_DAEMON
import sys
import os

__version__ = "0.1.0"

parser = OptionParser()
parser.add_option( "-m", "--modem", dest = "modem",
    help = "select modem. Available options = generic[default], testing" )

options, args = parser.parse_args()

if options.modem is None:
    options.modem = "generic"

#if options.modem not in pygsm.allModems():
    #parser.error( "Sorry, need to give a valid modem such as %s" % pygsm.allModems() )
#else:

print """Open Phone Server V%s [Python-Implementation]
(C) 2008 Michael 'Mickey' Lauer (Openmoko, Inc.)""" % __version__

if "OPHONED_DEBUG" in os.environ:
    openlog( "py-ophoned", LOG_PERROR, LOG_DAEMON )

from controller import Controller
c = Controller( options.modem )

if options.modem == "testing":
    import thread, gobject
    gobject.threads_init()
    thread.start_new_thread( c.run, () )
else:
    try:
        c.run()
    except KeyboardInterrupt:
        del c
        sys.exit( 0 )
