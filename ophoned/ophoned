#!/usr/bin/env python
"""
The Open Device Daemon - Python Implementation

(C) 2008 Michael 'Mickey' Lauer <mlauer@vanille-media.de>
(C) 2008 Openmoko, Inc.
GPLv2 or later
"""

__version__ = "0.0.0"

import pygsm
from optparse import OptionParser
from config import LOG, LOG_ERR, LOG_WARNING, LOG_INFO, LOG_DEBUG
from syslog import openlog, LOG_PERROR, LOG_DAEMON
import os

parser = OptionParser()
parser.add_option( "-m", "--modem", dest = "modem",
    help = "select modem. Available options = %s " % pygsm.allModems() )

options, args = parser.parse_args()

if options.modem is None:
    options.modem = "ti_calypso"

if options.modem not in pygsm.allModems():
    parser.error( "Sorry, need to give a valid modem such as %s" % pygsm.allModems() )
else:
    if "OPHONED_DEBUG" in os.environ:
        openlog( "py-ophoned", LOG_PERROR, LOG_DAEMON )
        LOG( LOG_INFO, "Using modem '%s'" % options.modem )

from controller import Controller
Controller( pygsm.modem( options.modem ) ).run()
