#!/usr/bin/env python
"""
The Open Device Daemon - Python Implementation

(C) 2008 Michael 'Mickey' Lauer <mlauer@vanille-media.de>
(C) 2008 Openmoko, Inc.
GPLv2 or later
"""

from optparse import OptionParser
from ophoned.modems import allModems
import sys
import os

__version__ = "0.1.0"

parser = OptionParser()
parser.add_option( "-m", "--modem", dest = "modem",
    help = "select modem. Available options = %s (default: ti_calypso)" % allModems() )

options, args = parser.parse_args()

if options.modem is None:
    options.modem = "ti_calypso"

if options.modem not in allModems():
    parser.error( "Sorry, need to give a valid modem such as %s" % allModems() )
    sys.exit( -1 )

print """Open Phone Server V%s [Python-Implementation]
(C) 2008 Michael 'Mickey' Lauer (Openmoko, Inc.)""" % __version__

sys.path.append( ".." )

from syslog import openlog, LOG_PERROR, LOG_DAEMON
from ophoned.config import LOG, LOG_ERR, LOG_WARNING, LOG_INFO, LOG_DEBUG
from ophoned.controller import Controller
c = Controller( options.modem )

if "OPHONED_DEBUG" in os.environ:
    openlog( "py-ophoned", LOG_PERROR, LOG_DAEMON )

if "OPHONED_PROFILE" in os.environ:
    import hotshot
    prof = hotshot.Profile( "ophoned-stats" )
    try:
        prof.runcall(c.run)
    except KeyboardInterrupt:
        prof.close()
        del c
        sys.exit( 0 )

if options.modem == "testing":
    import thread, gobject
    gobject.threads_init()
    thread.start_new_thread( c.run, () )
else:
    try:
        c.run()
    except KeyboardInterrupt:
        del c
        sys.exit( 0 )
